CMAKE_MINIMUM_REQUIRED ( VERSION 3.0 )

PROJECT ( BifrostTools )

INCLUDE ( CPack )
ADD_DEFINITIONS ( -DMAJOR_VERSION_NUMBER=${CPACK_PACKAGE_VERSION_MAJOR} -DMINOR_VERSION_NUMBER=${CPACK_PACKAGE_VERSION_MINOR} -DPATCH_VERSION_NUMBER=${CPACK_PACKAGE_VERSION_PATCH} )

FIND_PACKAGE ( Boost 1.55 REQUIRED COMPONENTS program_options )
FIND_PACKAGE ( Maya REQUIRED  )
FIND_PACKAGE ( Bifrost REQUIRED  )
FIND_PACKAGE ( OpenGL REQUIRED )
FIND_PACKAGE ( GLFW REQUIRED )
IF ( BUILD_OPENGL_TOOLS )
  FIND_PACKAGE ( GLEW REQUIRED )
ENDIF ()
FIND_PACKAGE ( ZLIB REQUIRED )
FIND_PACKAGE ( ILMBase REQUIRED )
IF (BUILD_TOOLS)
IF ( BUILD_HOUDINI_TOOLS )
  FIND_PACKAGE ( HDK 15.5 REQUIRED )
  INCLUDE_DIRECTORIES ( ${HDK_INCLUDE_DIR} )
ELSE ()
  FIND_PACKAGE ( S2AA REQUIRED  )
  FIND_PACKAGE ( MtoA REQUIRED  )
  INCLUDE_DIRECTORIES ( ${MTOA_INCLUDE_DIR} )
ENDIF ()
IF (WIN32)
  FIND_PACKAGE ( ZLIB REQUIRED )
  INCLUDE_DIRECTORIES ( ${ZLIB_INCLUDE_DIR} )
  ADD_DEFINITIONS ( -D_USE_MATH_DEFINES ) # For M_PI
ENDIF ()

INCLUDE_DIRECTORIES ( ${S2AA_INCLUDE_DIR} )
INCLUDE_DIRECTORIES ( ${GLEW_INCLUDE_DIR} )
INCLUDE_DIRECTORIES ( ${GLFW3_INCLUDE_DIR} )
ENDIF (BUILD_TOOLS)
INCLUDE_DIRECTORIES ( ${ILMBASE_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES ( ${Boost_INCLUDE_DIR} )
INCLUDE_DIRECTORIES ( ${BIFROST_INCLUDE_DIR} )

# Temporary whilst Bifrost SDK is in a flux
# For the single point of header include of Bifrost headers
INCLUDE_DIRECTORIES ( . )

SET ( BIFROST_REQUIRED_LIBRARIES
  ${Bifrost_api_LIBRARY}
  )

IF ( WIN32 )
  ADD_DEFINITIONS ( /D_CRT_SECURE_NO_WARNINGS )
ELSE ()
  ADD_DEFINITIONS ( -std=c++0x )
ENDIF ()

# Deprecated (we are using Bifrost CMake macros)
# SET ( BIFROST_BASE_DIR ${MAYA_LOCATION} )

# LINK_DIRECTORIES ( ${MAYA_LIBRARY_DIR} )
MESSAGE ( "MAYA_LIBRARY_DIR = ${MAYA_LIBRARY_DIR}")
IF (APPLE)
  SET ( BIFROST_RPATH "${BIFROST_LOCATION}/bin")
  # MESSAGE ( "BIFROST_RPATH = ${BIFROST_RPATH}")
  SET ( CMAKE_INSTALL_RPATH ${BIFROST_RPATH} )
ELSE (APPLE)
  # Todo : follow OS X way
  SET ( CMAKE_INSTALL_RPATH "${MAYA_LOCATION}/plug-ins/bifrost/lib:${MAYA_LOCATION}/lib" )
  IF (BUILD_HOUDINI_TOOLS)
    SET ( CMAKE_INSTALL_RPATH
      "$ENV{HDSO}:${CMAKE_INSTALL_RPATH}"
      )
  ENDIF ()
  MESSAGE ( "DEBUGGING = ${MAYA_LOCATION}/plug-ins/bifrost/lib")

  LINK_DIRECTORIES (
    ${MAYA_LOCATION}/plug-ins/bifrost/lib
    ${MAYA_LOCATION}/lib
    )
ENDIF ()

INCLUDE_DIRECTORIES ( . )

ADD_SUBDIRECTORY ( utils )
ADD_SUBDIRECTORY ( applications )
IF ( BUILD_TOOLS )
# Houdini requirement are stringent and often at odds
# with other DCC application, as such, we can't build
# them together.
# The strategy is to build and package them separately
IF ( BUILD_HOUDINI_TOOLS )
  ADD_SUBDIRECTORY ( houdini )
ELSE ( BUILD_HOUDINI_TOOLS )
  ADD_SUBDIRECTORY ( maya )
  ADD_SUBDIRECTORY ( procedural )
ENDIF ( BUILD_HOUDINI_TOOLS )
ENDIF ( BUILD_TOOLS )
